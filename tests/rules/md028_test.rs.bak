use rustmark::rules::MD028BlanksBlockquote;
use rustmark::rule::Rule;

#[test]
fn test_md028_valid() {
    let rule = MD028BlanksBlockquote::default();
    let content = "> Quote\n> Another line\n\n> New quote\n> Another line\n";
    let result = rule.check(content).unwrap();
    assert!(result.is_empty());
}

#[test]
fn test_md028_invalid() {
    let rule = MD028BlanksBlockquote::default();
    let content = "> Quote\n> Another line\n>\n> Still same quote\n> Another line\n";
    let result = rule.check(content).unwrap();
    assert_eq!(result.len(), 1);
    assert_eq!(result[0].line, 3);
}

#[test]
fn test_md028_multiple_blanks() {
    let rule = MD028BlanksBlockquote::default();
    let content = "> Quote\n> Another line\n>\n>\n> Still same quote\n";
    let result = rule.check(content).unwrap();
    assert_eq!(result.len(), 2);
    assert_eq!(result[0].line, 3);
    assert_eq!(result[1].line, 4);
}

#[test]
fn test_md028_fix() {
    let rule = MD028BlanksBlockquote::default();
    let content = "> Quote\n> Another line\n>\n> Still same quote\n> Another line\n";
    let result = rule.fix(content).unwrap();
    assert_eq!(result, "> Quote\n> Another line\n\n> Still same quote\n> Another line\n");
} 