name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-gnu,aarch64-unknown-linux-gnu

      - name: Install cross-compilation tools
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: Build Linux (x86_64) Binary
        run: |
          cross build --release --target x86_64-unknown-linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/rumdl rumdl_linux_amd64

      - name: Build Linux (ARM64) Binary
        run: |
          cross build --release --target aarch64-unknown-linux-gnu
          cp target/aarch64-unknown-linux-gnu/release/rumdl rumdl_linux_arm64
      
      - name: Upload Linux Binaries
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: |
            rumdl_linux_amd64
            rumdl_linux_arm64

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin,aarch64-apple-darwin

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: Build macOS (x86_64) Binary
        run: |
          cargo build --release --target x86_64-apple-darwin
          cp target/x86_64-apple-darwin/release/rumdl rumdl_darwin_amd64
      
      - name: Build macOS (ARM64) Binary
        run: |
          cargo build --release --target aarch64-apple-darwin
          cp target/aarch64-apple-darwin/release/rumdl rumdl_darwin_arm64
      
      - name: Upload macOS Binaries
        uses: actions/upload-artifact@v4
        with:
          name: macos-binaries
          path: |
            rumdl_darwin_amd64
            rumdl_darwin_arm64

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Get Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: Build Windows Binary
        run: |
          cargo build --release --target x86_64-pc-windows-msvc
          copy target\x86_64-pc-windows-msvc\release\rumdl.exe rumdl_windows_amd64.exe
      
      - name: Upload Windows Binaries
        uses: actions/upload-artifact@v4
        with:
          name: windows-binaries
          path: rumdl_windows_amd64.exe

  publish-crate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish

  create-release:
    needs: [build-linux, build-macos, build-windows, publish-crate]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            linux-binaries/rumdl_linux_amd64
            linux-binaries/rumdl_linux_arm64
            macos-binaries/rumdl_darwin_amd64
            macos-binaries/rumdl_darwin_arm64
            windows-binaries/rumdl_windows_amd64.exe
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 